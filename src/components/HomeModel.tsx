/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/Models/HomeModel.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane12511: THREE.Mesh
    Yellow_Flower: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    ['Yellow Flower']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function HomeModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./models/HomeModel.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[4.184, 4.66, -0.94]} rotation={[-0.294, 0.003, -0.427]} scale={10.1}>
        <spotLight angle={0.136} penumbra={0.15} decay={1.5} color="#fde2b8" rotation={[-Math.PI / 2, 0, 0]} intensity={100} />
      </group>
      <mesh geometry={nodes.Plane12511.geometry} material={materials.Dirt} position={[2.069, 0.002, -0.039]} scale={[2.13, 2.712, 2.712]} />
      <mesh geometry={nodes.Yellow_Flower.geometry} material={materials['Yellow Flower']} position={[2.064, -0.008, -0.017]} rotation={[0, 1.155, -0.058]} scale={2.71} />
    </group>
  )
}

useGLTF.preload('./models/HomeModel.glb')
